/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.practica5diu;


/**
 *
 * @author hugob
 */
public class Practica5 extends javax.swing.JFrame {

    /**
     * Creates new form Practica5
     */
    boolean red=true,green=true,blue=true;
    
    public Practica5() {
        initComponents();
        RedCheckBox.setSelected(true);
        BlueCheckBox.setSelected(true);
        GreenCheckBox.setSelected(true);
        AllCheckBox.setSelected(true);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        positionGroup = new javax.swing.ButtonGroup();
        AllCheckBox = new javax.swing.JCheckBox();
        BlueCheckBox = new javax.swing.JCheckBox();
        RedCheckBox = new javax.swing.JCheckBox();
        GreenCheckBox = new javax.swing.JCheckBox();
        HigherLeftButton = new javax.swing.JRadioButton();
        HigherRightButton = new javax.swing.JRadioButton();
        LowerLeftButton = new javax.swing.JRadioButton();
        LowerRightButton = new javax.swing.JRadioButton();
        try {
            lienzo = new com.mycompany.practica5diu.Lienzo();
        } catch (java.io.IOException e1) {
            e1.printStackTrace();
        }

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        AllCheckBox.setText("All");
        AllCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AllCheckBoxActionPerformed(evt);
            }
        });

        BlueCheckBox.setText("Blue");
        BlueCheckBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                BlueCheckBoxItemStateChanged(evt);
            }
        });
        BlueCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BlueCheckBoxActionPerformed(evt);
            }
        });

        RedCheckBox.setText("Red");
        RedCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RedCheckBoxActionPerformed(evt);
            }
        });

        GreenCheckBox.setText("Green");
        GreenCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GreenCheckBoxActionPerformed(evt);
            }
        });

        positionGroup.add(HigherLeftButton);
        HigherLeftButton.setText("Higher Left");
        HigherLeftButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HigherLeftButtonActionPerformed(evt);
            }
        });

        positionGroup.add(HigherRightButton);
        HigherRightButton.setText("Higher Right");
        HigherRightButton.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                HigherRightButtonItemStateChanged(evt);
            }
        });
        HigherRightButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HigherRightButtonActionPerformed(evt);
            }
        });

        positionGroup.add(LowerLeftButton);
        LowerLeftButton.setText("Lower Left");
        LowerLeftButton.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                LowerLeftButtonItemStateChanged(evt);
            }
        });

        positionGroup.add(LowerRightButton);
        LowerRightButton.setText("Lower Right");
        LowerRightButton.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                LowerRightButtonItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout lienzoLayout = new javax.swing.GroupLayout(lienzo);
        lienzo.setLayout(lienzoLayout);
        lienzoLayout.setHorizontalGroup(
            lienzoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 690, Short.MAX_VALUE)
        );
        lienzoLayout.setVerticalGroup(
            lienzoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 466, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(GreenCheckBox)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lienzo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(AllCheckBox)
                                    .addComponent(RedCheckBox)
                                    .addComponent(BlueCheckBox))
                                .addGap(87, 87, 87)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(HigherRightButton)
                                    .addComponent(HigherLeftButton)
                                    .addComponent(LowerLeftButton)
                                    .addComponent(LowerRightButton))))
                        .addGap(80, 80, 80))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AllCheckBox)
                    .addComponent(HigherLeftButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(HigherRightButton)
                    .addComponent(BlueCheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LowerLeftButton)
                    .addComponent(RedCheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(GreenCheckBox)
                    .addComponent(LowerRightButton))
                .addGap(17, 17, 17)
                .addComponent(lienzo, javax.swing.GroupLayout.DEFAULT_SIZE, 466, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AllCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AllCheckBoxActionPerformed
        // TODO add your handling code here:
        
        if(AllCheckBox.isSelected()){
            RedCheckBox.setSelected(true);
            BlueCheckBox.setSelected(true);
            GreenCheckBox.setSelected(true);
            red=true;
            blue=true;
            green=true;
            lienzo.setImagen(lienzo.imagen);
        }
        UtilsPractica5.seleccionarComponentes(lienzo.imagen, red, green, blue);
        lienzo.repaint();
        
    }//GEN-LAST:event_AllCheckBoxActionPerformed

    private void BlueCheckBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_BlueCheckBoxItemStateChanged
        // TODO add your handling code here:
        
        
        
    }//GEN-LAST:event_BlueCheckBoxItemStateChanged

    private void HigherLeftButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HigherLeftButtonActionPerformed
        // TODO add your handling code here:
        lienzo.setValues(0, 0);
        lienzo.repaint();
        
    }//GEN-LAST:event_HigherLeftButtonActionPerformed

    private void HigherRightButtonItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_HigherRightButtonItemStateChanged
        // TODO add your handling code here:
        lienzo.setValues(lienzo.imagen.getWidth()-lienzo.logotipo.getWidth(), 0);
        lienzo.repaint();
    }//GEN-LAST:event_HigherRightButtonItemStateChanged

    private void LowerLeftButtonItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_LowerLeftButtonItemStateChanged
        // TODO add your handling code here:
        lienzo.setValues(0, lienzo.imagen.getHeight()-lienzo.logotipo.getHeight());
        lienzo.repaint();
    }//GEN-LAST:event_LowerLeftButtonItemStateChanged

    
    private void HigherRightButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HigherRightButtonActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_HigherRightButtonActionPerformed

    private void LowerRightButtonItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_LowerRightButtonItemStateChanged
        // TODO add your handling code here:
        lienzo.setValues(lienzo.imagen.getWidth()-lienzo.logotipo.getWidth(), lienzo.imagen.getHeight()-lienzo.logotipo.getHeight());
    }//GEN-LAST:event_LowerRightButtonItemStateChanged

    private void BlueCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BlueCheckBoxActionPerformed
        // TODO add your handling code here:
        
        if(!BlueCheckBox.isSelected()){
            System.out.println("EEEEEEEEEEE");
            blue=false;
            AllCheckBox.setSelected(false);
        }else{
            System.out.println("azuuul");
            blue=true;
            lienzo.setImagen(lienzo.imagen);
        }
        
        if(!BlueCheckBox.isSelected() && !RedCheckBox.isSelected() && !GreenCheckBox.isSelected()){
            blue=true;
            BlueCheckBox.setSelected(true);
        }
        
        lienzo.setImagen(UtilsPractica5.seleccionarComponentes(lienzo.ima, red, green, blue));
        lienzo.repaint();
        
    }//GEN-LAST:event_BlueCheckBoxActionPerformed

    private void RedCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RedCheckBoxActionPerformed
        // TODO add your handling code here:
        if(!RedCheckBox.isSelected()){
            
            red=false;
            AllCheckBox.setSelected(false);
        }else{
            
            red=true;
            System.out.println(red);
            lienzo.setImagen(lienzo.imagen);
        }
        if(!BlueCheckBox.isSelected() && !RedCheckBox.isSelected() && !GreenCheckBox.isSelected()){
            blue=true;
            BlueCheckBox.setSelected(true);
        }
        
        lienzo.setImagen(UtilsPractica5.seleccionarComponentes(lienzo.ima, red, green, blue));
        lienzo.repaint();
        
    }//GEN-LAST:event_RedCheckBoxActionPerformed

    private void GreenCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GreenCheckBoxActionPerformed
        // TODO add your handling code here:
        if(!GreenCheckBox.isSelected()){
            
            green=false;
            AllCheckBox.setSelected(false);
        }else{
            
            green=true;
            
            lienzo.setImagen(lienzo.imagen);
        }
        if(!BlueCheckBox.isSelected() && !RedCheckBox.isSelected() && !GreenCheckBox.isSelected()){
            green=true;
            GreenCheckBox.setSelected(true);
        }
        
        lienzo.setImagen(UtilsPractica5.seleccionarComponentes(lienzo.ima, red, green, blue));
        lienzo.repaint();
        
    }//GEN-LAST:event_GreenCheckBoxActionPerformed

   
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox AllCheckBox;
    private javax.swing.JCheckBox BlueCheckBox;
    private javax.swing.JCheckBox GreenCheckBox;
    private javax.swing.JRadioButton HigherLeftButton;
    private javax.swing.JRadioButton HigherRightButton;
    private javax.swing.JRadioButton LowerLeftButton;
    private javax.swing.JRadioButton LowerRightButton;
    private javax.swing.JCheckBox RedCheckBox;
    private com.mycompany.practica5diu.Lienzo lienzo;
    private javax.swing.ButtonGroup positionGroup;
    // End of variables declaration//GEN-END:variables
}
